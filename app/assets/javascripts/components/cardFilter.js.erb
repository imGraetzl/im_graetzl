APP.components.cardFilter = (function() {

  var filterForm;
  var cardGrid;
  var masonrySetup = false;

  function init() {

    // ----------- Search Suggestion Form - MICHAEL
    suggestionForm = $(".search-suggestion-trigger");
    suggestionBox = $(".search-suggestion");
    suggestionLink = $(".search-suggestion a");
    suggestionSelect = $("#graetzl-suggestion");
    suggestionValue = $(".search-suggestion .active").text();
    suggestionTitle = $(".category_title");

    $('.close-ico').on('click', function(event){
      event.preventDefault();
      suggestionForm.val(suggestionValue);
      suggestionBox.slideUp("fast");
    });

    // Check if Category Param exists in URL
    if (window.location.href.indexOf("category=") > -1) {
      suggestionTitle.text(suggestionValue);
    }

    suggestionLink.on("click", function() {
      suggestionLink.removeClass("active");
      $(this).addClass("active");
      var categoryId = $(this).data("category-id");
      filterForm.find("[name=group_category_id]").val(categoryId);
      if (categoryId) {
        suggestionValue = $(this).text();
        suggestionTitle.text($(this).text());
        setValue(suggestionValue);
      } else {
        suggestionValue = null;
        suggestionTitle.text("allen");
        setValue(suggestionValue);
      }
      suggestionBox.slideUp("fast");
      filterForm.submit();
    });
    suggestionForm.on("click", function(){
      $(this).focus().select();
      $(this).val("");
      suggestionBox.slideDown("fast");
    });
    suggestionForm.keypress(function (e) {
      filterForm.find("[name=group_category_id]").val(null);
      if (e.which == 13) {
        suggestionLink.removeClass("active");
        suggestionBox.slideUp("fast");
        suggestionValue = $(this).val();
        suggestionTitle.text($(this).val());
        setValue(suggestionValue);
        filterForm.submit();
      }
    });

    $(suggestionSelect).SumoSelect({
      search: true,
      searchText: 'Suche..',
      placeholder: 'Bezirk auswählen..',
      csvDispCount: 3,
      captionFormat: 'in {0} Bezirken',
      captionFormatAllSelected: 'in Ganz Wien',
      okCancelInMulti: true,
      selectAll: true,
      locale: ['Übernehmen', 'Abbrechen', 'Ganz Wien']
    });

    $("#graetzl-suggestion").on("change", function(){
      filterForm.submit();
    });

    $(".label-select .select-all").on("click", function(){
      if ($(this).hasClass( "selected" )) {
        $(".label-select .btnOk").click();
      }
    });

    var setValue = function(value) {
      suggestionForm.val(value);
    }
    // ----------- Search Suggestion Form - MICHAEL



    // ----------- EPU-to-EPU
    $("#meeting-categories").on("change", function(){
      $("#meeting_category_id").val('');
      filterForm.submit();
    });
    // ----------- EPU-to-EPU



    filterForm = $(".cards-filter");
    cardGrid = $('.card-grid');

    // ---------- USE VOR NEW JBOX MODALS
    var modals = []

    // Use new jBox Modals
    $(".filter-selection-text-jbox a").not( ".plain-link, .filter-modal-district" ).each(function(index, value) {

        var modal = $(this).attr('href');
        var $attach = $('[href="'+modal+'"]');
        var $content = $(''+modal+'');

        modals[modal] = new jBox('Confirm', {
          addClass:'jBox',
          attach: $attach,
          getTitle: 'data-jbox-title',
          confirmButton: 'Do it!',
          cancelButton: 'Nope',
          content: $content,
          trigger: 'click',
          closeOnEsc:true,
          closeOnClick:'body',
          blockScroll:true,
          animation:{open: 'zoomIn', close: 'zoomOut'},
          confirmButton: 'Anwenden',
          cancelButton: 'Zurücksetzen',
          confirm: function() {
            updateFilterInputs(this.content);
            updateFilterLabels(this.content);
            filterForm.submit();
          },
          cancel: function() {
            this.content.find('input:checked').removeAttr('checked');
            updateFilterInputs(this.content);
            updateFilterLabels(this.content);
            filterForm.submit();
          }

        });

    });

    // jBox District Filter MODAL with Modal Buttons

    var districtModal = new jBox('Confirm', {
      addClass:'jBox',
      attach: '.filter-modal-district',
      getTitle: 'data-jbox-title',
      confirmButton: 'Anwenden',
      cancelButton: 'Zurücksetzen',
      content: $('.filter-modal-jbox-district'),
      trigger: 'click',
      closeOnEsc:true,
      closeOnClick:'body',
      blockScroll:true,
      animation:{open: 'zoomIn', close: 'zoomOut'},
      confirm: function() {
        selectAllGraetzlsIn(this.content);
        updateFilterInputs(this.content);
        updateFilterLabels(this.content);
        filterForm.submit();
      },
      cancel: function() {
        unSelectAllDistricts(this.content);
        selectAllGraetzlsIn(this.content);
        updateFilterInputs(this.content);
        updateFilterLabels(this.content);
        filterForm.submit();
      }
    });


    // Check on Init Load -> Auslagern in Funktion
    if ($('#select-home-graetzl').prop('checked') == true) {
      unSelectAllDistricts($(".filter-modal-jbox-district"));
      $('.filter-modal-jbox-district #select-all').prop("checked", false); // deselect Wien
    }

    $(".filter-modal-jbox-district").on("click", "#select-home-graetzl", function() {
      //console.log($(this));
      // Obige ausgelagerte Funktion aufrufen, sttt untig nochmals

      if ($(this).prop('checked') == true) {
        unSelectAllDistricts($(".filter-modal-jbox-district"));
        $('.filter-modal-jbox-district #select-all').prop("checked", false); // deselect Wien

      }
    });

    // District Filter - Select Ganz Wien Checkbox
    $(".filter-modal-jbox-district").on("click", ".select-all", function() {
      if ($(".select-all input:checkbox").prop('checked') == true) {
        selectAllDistricts($(".filter-modal-jbox-district"));
        $('.filter-modal-jbox-district #select-home-graetzl').prop("checked", false); // deselect HomeGraetzl
      } else {
        unSelectAllDistricts($(".filter-modal-jbox-district"));
      }
    });

    // Toggle ganz Wien Checkbox wenn alle Bezirke gewählt
    $(".filter-modal-jbox-district .filter-input").on("change", function() {

      $('.filter-modal-jbox-district #select-home-graetzl').prop("checked", false); // deselect HomeGraetzl

      var countDistricts = $(".filter-modal-jbox-district .filter-input").length;
      var countCheckedDistricts = $(".filter-modal-jbox-district .filter-input").find('input:checked').length;

      if (countDistricts == countCheckedDistricts) {
        $(".select-all input:checkbox").prop("checked", true);
      } else {
        $(".select-all input:checkbox").prop("checked", false);
      }
    });

    // Use for Buttons inside Modal, not Confirm Modals which already has Buttons
    $(".filter-modal-jbox").on("click", ".filter-button", function() {
      var currentModalContent = $(this).closest( ".filter-modal-jbox" );
      var currentModalId = '#' + currentModalContent.attr('id');
      updateFilterInputs(currentModalContent);
      updateFilterLabels(currentModalContent);
      filterForm.submit();
      modals[currentModalId].close();
    });

    // Use for OneClick Modals
    $(".filter-modal-jbox.oneclick .filter-input").on("change", function() {
      var currentModalContent = $(this).closest( ".filter-modal-jbox" );
      var currentModalId = '#' + currentModalContent.attr('id');
      updateFilterInputs(currentModalContent);
      updateFilterLabels(currentModalContent);
      filterForm.submit();
      modals[currentModalId].close();
    });

    // ---------- USE FOR NEW JBOX MODALS


    // ---------- USE FOR OLD featherlight MODALS

    filterForm.find(".filter-selection-text a").not( ".plain-link" ).featherlight({
      root: '.card-grid-container',
      targetAttr: 'href',
      persist: true
    });

    $(".filter-modal").on("click", ".reset-button", function() {
      $('input:checkbox').prop('checked', false);
      var currentModal = $.featherlight.current();
      updateFilterLabels(currentModal.$content);
      filterForm.submit();
      currentModal.close();
    });

    $(".filter-modal").on("click", ".filter-button", function() {
      var currentModal = $.featherlight.current();
      updateFilterInputs(currentModal.$content);
      updateFilterLabels(currentModal.$content);
      filterForm.submit();
      currentModal.close();
    });

    // ---------- USE FOR OLD featherlight MODALS

    // HELPER FUNCTIONS

    $(".filter-modal").each(function() {
      updateFilterInputs($(this));
    });

    filterForm.on('ajax:beforeSend', function() {
      clearandInitGrid();
      showSpinner();
    });

    filterForm.on('ajax:success', function() {
      addActionCard();
      addFeaturedCard();
      adjustNewCards();
    });

    $('.link-load').on('ajax:success', function() {
      removeDuplicates();
      adjustNewCards();
    });

    filterForm.submit();
  }

  function selectAllDistricts(modal) {
    modal.find(".filter-input input:checkbox").each(function(){
      $(this).prop("checked", true);
    });
  }

  function unSelectAllDistricts(modal) {
    modal.find(".filter-input input:checkbox").each(function(){
      $(this).prop("checked", false);
    });
  }

  function selectAllGraetzlsIn(modal) {

    var districtIds = [];
    modal.find(".filter-input input:checkbox:checked").each(function(){
      districtIds = districtIds.concat($(this).val());
    });

    if (districtIds.length == 23) {
      unSelectAllDistricts(modal);
      districtIds = []; // Reset for better Rails Performance
    }

    $('.graetzl-ids').find('option').each(function() {
      $(this).prop("selected", false);
      var inSelectedDistrict = districtIds && districtIds.indexOf($(this).data('districtId').toString()) > -1;
      if (inSelectedDistrict) $(this).prop("selected", true);
    });

    var $homeGraetzl = modal.find('#select-home-graetzl'); // Set Home Graetzl
    if ($homeGraetzl.prop('checked') == true) {
      $('.graetzl-ids').val($homeGraetzl.val());
    }

  }

  function updateFilterInputs(modal) {
    filterForm.find('[id^="' + modal.prop("id") + '"]').remove();
    modal.find("input, select").each(function() {
      var cloneId = modal.prop("id") + "_" + ($(this).prop("id") || $(this).prop("name"));
      // We need to copy the value manually because clone() doesn't do it for select elements
      $(this).clone().prop("id", cloneId).val($(this).val()).appendTo(filterForm).hide();
    });
  }

  function updateFilterLabels(modal) {
    var selectedInputs = modal.find(".filter-input :selected, .filter-input :checked");
    var link = filterForm.find('a[href="#' + modal.prop("id") + '"]');
    if (modal.find(".filter-input select").data("select-all")) {
      link.text(link.data("no-filter-label"));
      link.removeClass('filter-applied');
    } else if (modal.find('#select-home-graetzl').prop('checked') == true) {
        link.text(modal.find('#select-home-graetzl').data('label'));
        link.addClass('filter-applied');
    } else if (selectedInputs.length > 2) {
        var selectedCount = selectedInputs.length;
        var shownCount = selectedInputs.length - 2;
        selectedInputs.length = 2; // Cut for too much labels and show more info
        var label = selectedInputs.map(function() { return $(this).data("label"); }).get().join(", ");
        link.text(label +', + ' + shownCount + ' weitere');
        link.addClass('filter-applied');
    } else if (selectedInputs.length > 0) {
        var label = selectedInputs.map(function() { return $(this).data("label"); }).get().join(", ");
        link.text(label);
        link.addClass('filter-applied');
    } else {
        link.text(link.data("no-filter-label"));
        link.removeClass('filter-applied');
    }
  }

  function clearandInitGrid() {
    var allItems = cardGrid.find('[data-behavior="masonry-card"]');
    allItems.remove();
    $('.link-load').addClass("hide");

    if (masonrySetup) {
      cardGrid.masonry("destroy");
    }

    cardGrid.masonry({
      columnWidth: 310,
      gutter: 24,
      itemSelector: '[data-behavior="masonry-card"]',
      fitWidth : true
    });

    masonrySetup = true;
  }

  function showSpinner() {
    var spinner = $('footer .loading-spinner').clone().removeClass('-hidden');
    cardGrid.append(spinner);
  }

  function addActionCard() {
    if ($(".action-card-container").exists()) {
      var actionCard = $(".action-card-container").children().first().clone();
      if (cardGrid.children(":eq(1)").exists()) {
        cardGrid.children(":eq(1)").after(actionCard);
      } else {
        cardGrid.append(actionCard);
      }
    }
  }

  // TODO: Hack for Adding Feature Card
  function addFeaturedCard() {
    if ($('.featuredCard').exists()) {
      var featuredCard = $('.featuredCard').clone().removeClass('-hidden');
      if (cardGrid.children(':eq(2)').exists()) {
        cardGrid.children(':eq(2)').after(featuredCard);
      }
    }
  }


  // Infinite Scrolling - Load More Data if Scrolling to Bottom
  function initInfiniteScroll() {

    // Click Btn only once - Set to true if clicked.
    var btn_link_load_clicked = false;

    $(window).scroll(function() {
      // Click Btn on bottom Scroll via JS if Btn & more Data exists (is not hidden)
      if (cardGrid.exists() && !$('.link-load').hasClass('hide')) {
        var scrollTop = $(document).scrollTop();
        var windowHeight = $(window).height();
        var height = $(document).height() - windowHeight;
        var scrollPercentage = (scrollTop / height);

        // if the scroll is more than 70% from the top, load more content.
        if(scrollPercentage > 0.7 && btn_link_load_clicked == false) {
          $('.link-load').click();
          //console.log('scrolled and clicked');
          btn_link_load_clicked = true;
        }
      }
    });
  } // Infinite Scrolling

  // Remove Duplicate Cards
  function removeDuplicates() {
    var items = cardGrid.find('[data-card-id]');
    var exists = {};
    console.log(items.length);
    items.each(function() {
        var cardId = $(this).attr('data-card-id');
        if (exists[cardId]) {
          console.log($(this));
          $(this).remove();
        } else {
          exists[cardId] = true;
        }
    });
  }

  function adjustNewCards() {
    var newCards = cardGrid.find('[data-behavior="masonry-card"]').not('[data-appended]');
    cardGrid.masonry('appended', newCards);
    newCards.attr("data-appended", true);
    //console.log(newCards);
    APP.components.initUserTooltip();
    initInfiniteScroll();
  }

  return {
    init: init
  };
})();
