APP.components.cardFilter = (function() {

  var filterForm;
  var cardGrid;
  var masonrySetup = false;

  function init() {

    // ----------- Search Suggestion Form - MICHAEL
    suggestionForm = $(".search-suggestion-trigger");
    suggestionBox = $(".search-suggestion");
    suggestionLink = $(".search-suggestion a");
    suggestionSelect = $("#graetzl-suggestion");
    suggestionValue = $(".search-suggestion .active").text();
    suggestionTitle = $(".category_title");

    // Check if Category Param exists in URL
    if (window.location.href.indexOf("category=") > -1) {
      suggestionTitle.text(suggestionValue);
    }

    suggestionLink.on("click", function() {
      suggestionLink.removeClass("active");
      $(this).addClass("active");
      var categoryId = $(this).data("category-id");
      filterForm.find("[name=group_category_id]").val(categoryId);
      if (categoryId) {
        suggestionValue = $(this).text();
        suggestionTitle.text($(this).text());
        setValue(suggestionValue);
      } else {
        suggestionValue = null;
        suggestionTitle.text("allen");
        setValue(suggestionValue);
      }
      suggestionBox.slideUp("fast");
      filterForm.submit();
    });
    suggestionForm.on("click", function(){
      $(this).focus().select();
      $(this).val("");
      suggestionBox.slideDown("fast");
    });
    suggestionForm.keypress(function (e) {
      filterForm.find("[name=group_category_id]").val(null);
      if (e.which == 13) {
        suggestionLink.removeClass("active");
        suggestionBox.slideUp("fast");
        suggestionValue = $(this).val();
        suggestionTitle.text($(this).val());
        setValue(suggestionValue);
        filterForm.submit();
      }
    });

    $(suggestionSelect).SumoSelect({
      search: true,
      searchText: 'Suche..',
      placeholder: 'Bezirk auswählen..',
      csvDispCount: 3,
      captionFormat: 'in {0} Bezirken',
      captionFormatAllSelected: 'in Ganz Wien',
      okCancelInMulti: true,
      selectAll: true,
      locale: ['Übernehmen', 'Abbrechen', 'Ganz Wien']
    });

    $("#graetzl-suggestion").on("change", function(){
      filterForm.submit();
    });

    $(".label-select .select-all").on("click", function(){
      if ($(this).hasClass( "selected" )) {
        $(".label-select .btnOk").click();
      }
    });

    var setValue = function(value) {
      suggestionForm.val(value);
    }

    // ----------- Search Suggestion Form - MICHAEL

    filterForm = $(".cards-filter");
    cardGrid = $('.card-grid');

    filterForm.find(".filter-selection-text a").featherlight({
      root: '.card-grid-container',
      targetAttr: 'href',
      persist: true
    });

    $(".filter-modal").on("click", ".reset-button", function() {
      $('input:checkbox').prop('checked', false);
      var currentModal = $.featherlight.current();
      updateFilterLabels(currentModal.$content);
      filterForm.submit();
      currentModal.close();
    });

    $(".filter-modal").on("click", ".filter-button", function() {
      var currentModal = $.featherlight.current();
      updateFilterInputs(currentModal.$content);
      updateFilterLabels(currentModal.$content);
      filterForm.submit();
      currentModal.close();
    });

    $(".filter-modal").each(function() {
      updateFilterInputs($(this));
    });

    filterForm.on('ajax:beforeSend', function() {
      clearandInitGrid();
      showSpinner();
    });

    filterForm.on('ajax:success', function() {
      stopSpinner();
      addActionCard();
      //addFeaturedCard();
      adjustNewCards();
    });

    $('.link-load').on('ajax:success', function() {
      adjustNewCards();
    });

    filterForm.submit();
  }

  function updateFilterInputs(modal) {
    filterForm.find('[id^="' + modal.prop("id") + '"]').remove();
    modal.find("input, select").each(function() {
      var cloneId = modal.prop("id") + "_" + ($(this).prop("id") || $(this).prop("name"));
      // We need to copy the value manually because clone() doesn't do it for select elements
      $(this).clone().prop("id", cloneId).val($(this).val()).appendTo(filterForm).hide();
    });
  }

  function updateFilterLabels(modal) {
    var selectedInputs = modal.find(".filter-input :selected, .filter-input :checked");
    var link = filterForm.find('a[href="#' + modal.prop("id") + '"]');
    if (modal.find(".filter-input select").data("select-all")) {
      link.text(link.data("no-filter-label"));
      link.removeClass('filter-applied');
    } else if (selectedInputs.length > 0) {
      var label = selectedInputs.map(function() { return $(this).data("label"); }).get().join(", ");
      link.text(label);
      link.addClass('filter-applied');
    } else {
      link.text(link.data("no-filter-label"));
      link.removeClass('filter-applied');
    }
  }

  function clearandInitGrid() {
    var allItems = cardGrid.find('[data-behavior="masonry-card"]');
    allItems.remove();
    $('.link-load').addClass("hide");

    if (masonrySetup) {
      cardGrid.masonry("destroy");
    }

    cardGrid.masonry({
      columnWidth: 310,
      gutter: 24,
      itemSelector: '[data-behavior="masonry-card"]',
      fitWidth : true
    });

    masonrySetup = true;
  }

  function showSpinner() {
    var spinnerSrc = "<%= asset_path('svg/loading.svg') %>";
    var spinner = $('<img class="loading-spinner" src="' + spinnerSrc + '">');
    cardGrid.append(spinner);
  }

  function stopSpinner() {
    cardGrid.find(".stopSpinner").remove();
  }

  function addActionCard() {
    if ($(".action-card-container").exists()) {
      var actionCard = $(".action-card-container").children().first().clone();
      if (cardGrid.children(":eq(1)").exists()) {
        cardGrid.children(":eq(1)").after(actionCard);
      } else {
        cardGrid.append(actionCard);
      }
    }
  }

  // TODO: Hack for Adding Feature Card
  function addFeaturedCard() {
    if ($('.featuredCard').exists()) {
      var featuredCard = $('.featuredCard').clone().removeClass('-hidden');
      if (cardGrid.children(':eq(2)').exists()) {
        cardGrid.children(':eq(2)').after(featuredCard);
      }
    }
  }


  // Infinite Scrolling - Load More Data if Scrolling to Bottom
  function initInfiniteScroll() {

    // Click Btn only once - Set to true if clicked.
    var btn_link_load_clicked = false;

    $(window).scroll(function() {
      // Click Btn on bottom Scroll via JS if Btn & more Data exists (is not hidden)
      if (cardGrid.exists() && !$('.link-load').hasClass('hide')) {
        var scrollTop = $(document).scrollTop();
        var windowHeight = $(window).height();
        var height = $(document).height() - windowHeight;
        var scrollPercentage = (scrollTop / height);

        // if the scroll is more than 70% from the top, load more content.
        if(scrollPercentage > 0.7 && btn_link_load_clicked == false) {
          $('.link-load').click();
          //console.log('scrolled and clicked');
          btn_link_load_clicked = true;
        }
      }
    });
  } // Infinite Scrolling



  function adjustNewCards() {
    var newCards = cardGrid.find('[data-behavior="masonry-card"]').not('[data-appended]');
    cardGrid.masonry('appended', newCards);
    newCards.attr("data-appended", true);
    initInfiniteScroll();
  }

  return {
    init: init
  };
})();
