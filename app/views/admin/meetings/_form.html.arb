active_admin_form_for [:admin, resource] do |f|
  columns do
    column do
      f.semantic_errors *f.object.errors.keys
      inputs 'Basic Info' do
        input :graetzl, collection: Graetzl.order(:name), include_blank: false, input_html: { :class => 'admin-filter-select'}
        input :name
        input :state, as: :select, collection: Meeting.states.keys, include_blank: false
        input :slug unless f.object.new_record?
        input :location, collection: Location.order(:name), include_blank: true, input_html: { :class => 'admin-filter-select'}
        input :group, collection: Group.order(:title), include_blank: true, input_html: { :class => 'admin-filter-select'}
        input :description
        input :cover_photo, as: :file,
          hint: (image_tag(attachment_url(f.object, :cover_photo, :fill, 200, 100)) if f.object.cover_photo)
        input :remove_cover_photo, as: :boolean if f.object.cover_photo
        input :starts_at_date
        input :starts_at_time, ignore_date: true
        input :ends_at_time, ignore_date: true
        input :approved_for_api
        input :platform_meeting
      end
      inputs 'Address', for: [:address, (f.object.address || f.object.build_address)] do |a|
        a.input :street_name
        a.input :street_number
        a.input :description
        a.input :zip
        a.input :city
      end
      actions
    end
    column do
      inputs 'Users' do
        has_many :going_tos,
                  allow_destroy: true,
                  heading: false,
                  new_record: 'User Hinzuf√ºgen' do |o|
          o.input :user, collection: User.admin_select_collection, include_blank: "Select User", input_html: { class: 'admin-filter-select'}
          o.input :role, as: :select, collection: GoingTo.roles.keys, include_blank: false
        end
      end
    end
  end
end
