active_admin_form_for [:admin, resource] do |f|
  f.semantic_errors

  inputs 'Umfrage Details' do
    random_id = SecureRandom.uuid
    input :user, label: "User", as: :string, input_html: {
      class: 'admin-autocomplete-component',
      placeholder: 'Name, Username oder E-Mail ...',
      data: { autocomplete_url: '/admin/autocomplete/users', user_autocomplete_id: "user_#{random_id}" }
    }
    input :user_id, as: :hidden, input_html: { 
      class: 'admin-autocomplete-id-target', 
      data: { user_autocomplete_id: "user_#{random_id}" }
    }
    input :region_id, collection: Region.all, include_blank: true, input_html: { :class => 'admin-filter-select'}
    input :graetzls, collection: Graetzl.all.sort_by(&:zip_name).map{|g| [g.zip_name, g.id,] }, input_html: { class: 'admin-filter-select-all'}
    input :status, as: :select, include_blank: false, input_html: { class: 'admin-filter-select'}
    input :poll_type, as: :select, include_blank: false, input_html: { class: 'admin-filter-select'}
    input :closed
    input :public_result
    input :comments_enabled
    input :title
    input :description
    input :cover_photo, as: :file, hint: f.object.cover_photo && image_tag(f.object.cover_photo_url(:thumb))
    input :remove_cover_photo, as: :boolean if f.object.cover_photo
  end

  f.has_many :poll_questions, allow_destroy: true, new_record: 'Frage hinzufügen' do |o|
    o.input :main_question
    o.input :required
    o.input :position
    o.input :option_type, as: :select
    o.input :title
    o.has_many :poll_options, allow_destroy: true, new_record: 'Antwortmöglichkeit hinzufügen' do |o|
      o.input :title
    end
  end


  actions
end
